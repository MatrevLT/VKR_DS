import streamlit as st
import reveal_slides as rs
def presentation_page():
    st.title("Презентация проекта")
    presentation_markdown = """
    # Прогнозирование отказов оборудования
    ---
    ## Введение
    - Цель: предсказать отказ оборудования (Target = 1) или его отсутствие
    (Target = 0).
    - Датасет: 10,000 записей, 14 признаков (температура, крутящий момент, износ и т.д.).
    ---
    ## Этапы работы
    1. Загрузка данных.
    2. Предобработка данных.
    3. Масштабирование данных.
    4. Обучение модели (XGBOOST).
    5. Оценка модели.
    6. Визуализация результатов.
    ---
    ## Предобработка данных
    - Удаление столбцов:'UDI', 'Product ID', 'TWF', 'HDF', 'PWF', 'OSF', 'RNF', типы отказов.
    - Кодирование признака 'Type' {'L': 0, 'M': 1, 'H': 2}.
    ---
    ## Масштабирование данных
    - Масштабирование числовых признаков с помощью `StandardScaler`.
    ---
    ## Обучение модели
    - Модель: XGBOOST.
    - Обучение на 80% тренировочной выборке.
    - Оценка на 20% тестовой выборке.
    - Метрики: Accuracy, Confusion Matrix, ROC-AUC.
    ---
    ## Оценка модели
    - Accuracy: 0.98
    - ROC-AUC: 0.97
    - Матрица ошибок отображается в приложении
    ---
    ## Streamlit-приложение
    - Основная страница: анализ данных и предсказания.
    - Страница с презентацией: описание проекта.
    ---
    ## Заключение
    - Модель предсказывает отказы оборудования.
    - Возможности для улучшения:
        - Более глубокая предобработка данных.
        - Использование сложных моделей.
        - Добавление в модели гиперпараметры.
    """
    rs.slides(presentation_markdown, theme="night", height=600)
